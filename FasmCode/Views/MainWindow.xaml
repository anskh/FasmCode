<Window x:Name="mainWindow" x:Class="FasmCode.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FasmCode.Views"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:intr="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:vm="clr-namespace:FasmCode.ViewModels"
        mc:Ignorable="d"
        Title="Fasm Code"
        Left="{Binding Settings.Config.Left, Mode=TwoWay}"
        Top="{Binding Settings.Config.Top, Mode=TwoWay}"
        Width="{Binding Settings.Config.Width, Mode=TwoWay}"
        Height="{Binding Settings.Config.Height, Mode=TwoWay}"
        WindowState="{Binding Settings.Config.WindowState, Mode=TwoWay}">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <intr:Interaction.Triggers>
        <intr:EventTrigger EventName="Loaded">
            <intr:InvokeCommandAction Command="{Binding WindowLoaded}"/>
        </intr:EventTrigger>
        <intr:EventTrigger EventName="Closing">
            <intr:InvokeCommandAction Command="{Binding WindowClosed}"/>
        </intr:EventTrigger>
    </intr:Interaction.Triggers>

    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="WhiteSmoke">
            <MenuItem Header="_File">
                <MenuItem Header="_New File..."
                          Command="{Binding NewCommand}"
                          InputGestureText="{Binding Settings.Keymap.New}">
                    <MenuItem.Icon>
                        <Image Source="Icons/New.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open File..."
                          Command="{Binding OpenCommand}"
                          InputGestureText="{Binding Settings.Keymap.Open}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Folder.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="O_pen Folder..."
                          Command="{Binding OpenFolderCommand}"
                          InputGestureText="{Binding Settings.Keymap.OpenFolder}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Folder.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Save"
                          Command="{Binding SaveCommand}"
                          InputGestureText="{Binding Settings.Keymap.Save}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Save.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save _As..."
                          Command="{Binding SaveAsCommand}"
                          InputGestureText="{Binding Settings.Keymap.SaveAs}">
                    <MenuItem.Icon>
                        <Image Source="Icons/SaveAs.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save A_ll"
                          Command="{Binding SaveAllCommand}"
                          InputGestureText="{Binding Settings.Keymap.SaveAll}">
                    <MenuItem.Icon>
                        <Image Source="Icons/SaveAll.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Close"
                          Command="{Binding CloseCommand}"
                          InputGestureText="{Binding Settings.Keymap.Close}">
                </MenuItem>
                <MenuItem Header="Close _Folder"
                          Command="{Binding CloseFolderCommand}"
                          InputGestureText="{Binding Settings.Keymap.CloseFolder}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Close.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="E_xit"
                          Command="{Binding ExitCommand}"
                          InputGestureText="{Binding Settings.Keymap.Exit}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Exit.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo"
                          Command="{Binding UndoCommand}"
                          InputGestureText="{Binding Settings.Keymap.Undo}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Undo.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Redo"
                          Command="{Binding RedoCommand}"
                          InputGestureText="{Binding Settings.Keymap.Redo}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Redo.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Cu_t"
                          Command="{Binding CutCommand}"
                          InputGestureText="{Binding Settings.Keymap.Cut}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Cut.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Copy"
                          Command="{Binding CopyCommand}"
                          InputGestureText="{Binding Settings.Keymap.Copy}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Copy.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Paste"
                          Command="{Binding PasteCommand}"
                          InputGestureText="{Binding Settings.Keymap.Paste}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Paste.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Delete"
                          Command="{Binding DeleteCommand}"
                          InputGestureText="{Binding Settings.Keymap.Delete}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Delete.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Select _All"
                          Command="{Binding SelectAllCommand}"
                          InputGestureText="{Binding Settings.Keymap.SelectAll}">
                    <MenuItem.Icon>
                        <Image Source="Icons/SelectAll.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Find"
                          Command="{Binding FindCommand}"
                          InputGestureText="{Binding Settings.Keymap.Find}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Find.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Replace"
                          Command="{Binding ReplaceCommand}"
                          InputGestureText="{Binding Settings.Keymap.Replace}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Replace.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Build">
                <MenuItem Header="_Compile"
                          Command="{Binding CompileCommand}"
                          InputGestureText="{Binding Settings.Keymap.Compile}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Compile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Run"
                          Command="{Binding RunCommand}"
                          InputGestureText="{Binding Settings.Keymap.Run}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Run.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Tools">
                <MenuItem Header="_Terminal..."
                          Command="{Binding TerminalCommand}"
                          InputGestureText="{Binding Settings.Keymap.Terminal}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Terminal.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Calculator..."
                          Command="{Binding CalculatorCommand}"
                          InputGestureText="{Binding Settings.Keymap.Calculator}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Calc.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Settings..."
                          Command="{Binding SettingsCommand}"
                          CommandParameter="{x:Reference Name=mainWindow}"
                          InputGestureText="{Binding Settings.Keymap.Settings}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Settings.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Help">
                <MenuItem Header="_Help"
                          Command="{Binding HelpCommand}"
                          InputGestureText="{Binding Settings.Keymap.Help}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Help.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_About Fasm Code"
                          Command="{Binding AboutCommand}"
                          CommandParameter="{x:Reference Name=mainWindow}"
                          InputGestureText="{Binding Settings.Keymap.About}">
                    <MenuItem.Icon>
                        <Image Source="Icons/Info.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <ToolBarTray DockPanel.Dock="Top" Background="WhiteSmoke" IsLocked="True">
            <ToolBar Background="WhiteSmoke">
                <Button Command="{Binding NewCommand}"
                        ToolTip="New">
                    <Image Source="Icons/New.png"/>
                </Button>
                <Button Command="{Binding OpenCommand}"
                        ToolTip="Open">
                    <Image Source="Icons/Folder.png"/>
                </Button>
                <Button Command="{Binding OpenFolderCommand}"
                        ToolTip="Open Folder">
                    <Image Source="Icons/Folder.png"/>
                </Button>
                <Button Command="{Binding SaveCommand}"
                        ToolTip="Save">
                    <Image Source="Icons/Save.png"/>
                </Button>
                <Button Command="{Binding SaveAsCommand}"
                        ToolTip="Save As">
                    <Image Source="Icons/SaveAs.png"/>
                </Button>
                <Button Command="{Binding SaveAllCommand}"
                        ToolTip="Save All">
                    <Image Source="Icons/SaveAll.png"/>
                </Button>
                <Separator/>
                <Button Command="{Binding UndoCommand}"
                        ToolTip="Undo">
                    <Image Source="Icons/Undo.png"/>
                </Button>
                <Button Command="{Binding RedoCommand}"
                        ToolTip="Redo">
                    <Image Source="Icons/Redo.png"/>
                </Button>
                <Separator/>
                <Button Command="{Binding CompileCommand}"
                        ToolTip="Compile">
                    <Image Source="Icons/Compile.png"/>
                </Button>
                <Button Command="{Binding RunCommand}"
                        ToolTip="Run">
                    <Image Source="Icons/Run.png"/>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <StatusBar DockPanel.Dock="Bottom" Background="WhiteSmoke">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Margin="5 0" Text="1:1"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock Margin="5 0" Text="Caps"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock Margin="5 0" Text="Num"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock Margin="5 0" Text="Ins"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock Margin="5 0" Text="UTF-8"/>
            </StatusBarItem>
        </StatusBar>

        <Grid DockPanel.Dock="Bottom" Background="WhiteSmoke">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="1"/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
            <TabControl Grid.Row="0"
                        Name="tabControlSources"
                        Background="WhiteSmoke"
                        ItemsSource="{Binding Sources}" SelectedIndex="{Binding SelectedSourceIndex}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <TextBlock Text="{Binding ShortFileName}" ToolTip="{Binding Document.FileName}"/>
                            <Button x:Name="btn"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.CloseCommand}"
                                    CommandParameter="{Binding}"
                                    Margin="5,0,0,0"
                                    Padding="3,0,3,0"
                                    BorderThickness="0"
                                    Background="Transparent">
                                <Path Data="M1,9 L9,1 M1,1 L9,9" StrokeThickness="1">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=btn, Path=IsMouseOver}" Value="False">
                                                    <Setter Property="Stroke" Value="LightGray" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=btn, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Stroke" Value="Black" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                            </Button>
                        </DockPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <avalonEdit:TextEditor
                            FontFamily="Consolas"
                            FontSize="10pt"
                            ShowLineNumbers="True"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto"
                            Document="{Binding Document}"
                            SyntaxHighlighting="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Settings.Highlighting}">
                        </avalonEdit:TextEditor>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
            <GridSplitter Grid.Row="1" Height="1" HorizontalAlignment="Stretch"  VerticalAlignment="Center"/>
            <TabControl Grid.Row="2" TabStripPlacement="Bottom" Background="WhiteSmoke">
                <TabItem Header="Output">
                    <TextBlock Text="Compilation..."/>

                </TabItem>
            </TabControl>
        </Grid>
    </DockPanel>
</Window>